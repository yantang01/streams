{"ast":null,"code":"var _jsxFileName = \"/Users/ytang/Documents/React/streams/client/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamCreate extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderError = _ref => {\n      let {\n        error,\n        touched\n      } = _ref;\n\n      if (touched && error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui error message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.renderInput = _ref2 => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref2;\n      const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field error\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  onSubmit(formValues) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  // return an empty object if everything is valid\n  // return object if invalid\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title.\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description.\";\n  }\n\n  return errors;\n}; // Hook up reduxForm\n// after that we will have a bunch of props to use depending on our needs\n\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);","map":{"version":3,"names":["React","Field","reduxForm","StreamCreate","Component","renderError","error","touched","renderInput","input","label","meta","className","onSubmit","formValues","render","props","handleSubmit","validate","errors","title","description","form"],"sources":["/Users/ytang/Documents/React/streams/client/src/components/streams/StreamCreate.js"],"sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  };\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n\n    return (\n      <div className=\"field error\">\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  onSubmit(formValues) {}\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form error\"\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  // return an empty object if everything is valid\n  // return object if invalid\n  const errors = {};\n  if (!formValues.title) {\n    errors.title = \"You must enter a title.\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description.\";\n  }\n  return errors;\n};\n\n// Hook up reduxForm\n// after that we will have a bunch of props to use depending on our needs\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate,\n})(StreamCreate);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;EAAA;IAAA;;IAAA,KACzCC,WADyC,GAC3B,QAAwB;MAAA,IAAvB;QAAEC,KAAF;QAASC;MAAT,CAAuB;;MACpC,IAAIA,OAAO,IAAID,KAAf,EAAsB;QACpB,oBACE;UAAK,SAAS,EAAC,kBAAf;UAAA,uBACE;YAAK,SAAS,EAAC,QAAf;YAAA,UAAyBA;UAAzB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF;MAKD;IACF,CATwC;;IAAA,KAWzCE,WAXyC,GAW3B,SAA4B;MAAA,IAA3B;QAAEC,KAAF;QAASC,KAAT;QAAgBC;MAAhB,CAA2B;MACxC,MAAMC,SAAS,GAAI,SAAQD,IAAI,CAACL,KAAL,IAAcK,IAAI,CAACJ,OAAnB,GAA6B,OAA7B,GAAuC,EAAG,EAArE;MAEA,oBACE;QAAK,SAAS,EAAC,aAAf;QAAA,wBACE;UAAA,UAAQG;QAAR;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,sBAAWD,KAAX;UAAkB,YAAY,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA,QAFF,EAGG,KAAKJ,WAAL,CAAiBM,IAAjB,CAHH;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAOD,CArBwC;EAAA;;EAuBzCE,QAAQ,CAACC,UAAD,EAAa,CAAE;;EAEvBC,MAAM,GAAG;IACP,oBACE;MACE,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CADZ;MAEE,SAAS,EAAC,eAFZ;MAAA,wBAIE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,SAAS,EAAE,KAAKL,WAApC;QAAiD,KAAK,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,KAAD;QACE,IAAI,EAAC,aADP;QAEE,SAAS,EAAE,KAAKA,WAFlB;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA,QALF,eAUE;QAAQ,SAAS,EAAC,mBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAcD;;AAxCwC;;AA2C3C,MAAMU,QAAQ,GAAIJ,UAAD,IAAgB;EAC/B;EACA;EACA,MAAMK,MAAM,GAAG,EAAf;;EACA,IAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;IACrBD,MAAM,CAACC,KAAP,GAAe,yBAAf;EACD;;EACD,IAAI,CAACN,UAAU,CAACO,WAAhB,EAA6B;IAC3BF,MAAM,CAACE,WAAP,GAAqB,+BAArB;EACD;;EACD,OAAOF,MAAP;AACD,CAXD,C,CAaA;AACA;;;AACA,eAAejB,SAAS,CAAC;EACvBoB,IAAI,EAAE,cADiB;EAEvBJ,QAAQ,EAAEA;AAFa,CAAD,CAAT,CAGZf,YAHY,CAAf"},"metadata":{},"sourceType":"module"}