{"ast":null,"code":"var splice = function splice(array, index, removeNum, value) {\n  array = array || [];\n\n  if (index < array.length) {\n    if (value === undefined && !removeNum) {\n      // inserting undefined\n      var _copy2 = [].concat(array);\n\n      _copy2.splice(index, 0, true); // temporary placeholder\n\n\n      _copy2[index] = undefined; // set to undefined\n\n      return _copy2;\n    }\n\n    if (value != null) {\n      var _copy3 = [].concat(array);\n\n      _copy3.splice(index, removeNum, value); // removing and adding\n\n\n      return _copy3;\n    }\n\n    var _copy = [].concat(array);\n\n    _copy.splice(index, removeNum); // removing\n\n\n    return _copy;\n  }\n\n  if (removeNum) {\n    // trying to remove non-existant item: return original array\n    return array;\n  } // trying to add outside of range: just set value\n\n\n  var copy = [].concat(array);\n  copy[index] = value;\n  return copy;\n};\n\nexport default splice;","map":{"version":3,"names":["splice","array","index","removeNum","value","length","undefined","_copy2","concat","_copy3","_copy","copy"],"sources":["/Users/ytang/Documents/React/streams/client/node_modules/redux-form/es/structure/plain/splice.js"],"sourcesContent":["var splice = function splice(array, index, removeNum, value) {\n  array = array || [];\n\n  if (index < array.length) {\n    if (value === undefined && !removeNum) {\n      // inserting undefined\n      var _copy2 = [].concat(array);\n\n      _copy2.splice(index, 0, true); // temporary placeholder\n\n\n      _copy2[index] = undefined; // set to undefined\n\n      return _copy2;\n    }\n\n    if (value != null) {\n      var _copy3 = [].concat(array);\n\n      _copy3.splice(index, removeNum, value); // removing and adding\n\n\n      return _copy3;\n    }\n\n    var _copy = [].concat(array);\n\n    _copy.splice(index, removeNum); // removing\n\n\n    return _copy;\n  }\n\n  if (removeNum) {\n    // trying to remove non-existant item: return original array\n    return array;\n  } // trying to add outside of range: just set value\n\n\n  var copy = [].concat(array);\n  copy[index] = value;\n  return copy;\n};\n\nexport default splice;"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgD;EAC3DH,KAAK,GAAGA,KAAK,IAAI,EAAjB;;EAEA,IAAIC,KAAK,GAAGD,KAAK,CAACI,MAAlB,EAA0B;IACxB,IAAID,KAAK,KAAKE,SAAV,IAAuB,CAACH,SAA5B,EAAuC;MACrC;MACA,IAAII,MAAM,GAAG,GAAGC,MAAH,CAAUP,KAAV,CAAb;;MAEAM,MAAM,CAACP,MAAP,CAAcE,KAAd,EAAqB,CAArB,EAAwB,IAAxB,EAJqC,CAIN;;;MAG/BK,MAAM,CAACL,KAAD,CAAN,GAAgBI,SAAhB,CAPqC,CAOV;;MAE3B,OAAOC,MAAP;IACD;;IAED,IAAIH,KAAK,IAAI,IAAb,EAAmB;MACjB,IAAIK,MAAM,GAAG,GAAGD,MAAH,CAAUP,KAAV,CAAb;;MAEAQ,MAAM,CAACT,MAAP,CAAcE,KAAd,EAAqBC,SAArB,EAAgCC,KAAhC,EAHiB,CAGuB;;;MAGxC,OAAOK,MAAP;IACD;;IAED,IAAIC,KAAK,GAAG,GAAGF,MAAH,CAAUP,KAAV,CAAZ;;IAEAS,KAAK,CAACV,MAAN,CAAaE,KAAb,EAAoBC,SAApB,EAxBwB,CAwBQ;;;IAGhC,OAAOO,KAAP;EACD;;EAED,IAAIP,SAAJ,EAAe;IACb;IACA,OAAOF,KAAP;EACD,CApC0D,CAoCzD;;;EAGF,IAAIU,IAAI,GAAG,GAAGH,MAAH,CAAUP,KAAV,CAAX;EACAU,IAAI,CAACT,KAAD,CAAJ,GAAcE,KAAd;EACA,OAAOO,IAAP;AACD,CA1CD;;AA4CA,eAAeX,MAAf"},"metadata":{},"sourceType":"module"}