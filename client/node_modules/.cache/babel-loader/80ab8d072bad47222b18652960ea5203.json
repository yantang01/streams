{"ast":null,"code":"var _jsxFileName = \"/Users/ytang/Documents/React/streams/client/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamCreate extends React.Component {\n  renderError(_ref) {\n    let {\n      error,\n      touched\n    } = _ref;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderInput(_ref2) {\n    let {\n      input,\n      label,\n      meta\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), this.renderError(meta)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  onSubmit(formValues) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  // return an empty object if everything is valid\n  // return object if invalid\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title.\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description.\";\n  }\n\n  return errors;\n}; // Hook up reduxForm\n// after that we will have a bunch of props to use depending on our needs\n\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);","map":{"version":3,"names":["React","Field","reduxForm","StreamCreate","Component","renderError","error","touched","renderInput","input","label","meta","onSubmit","formValues","render","props","handleSubmit","validate","errors","title","description","form"],"sources":["/Users/ytang/Documents/React/streams/client/src/components/streams/StreamCreate.js"],"sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">error</div>\n        </div>\n      );\n    }\n  }\n\n  renderInput({ input, label, meta }) {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n  }\n\n  onSubmit(formValues) {}\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form\"\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  // return an empty object if everything is valid\n  // return object if invalid\n  const errors = {};\n  if (!formValues.title) {\n    errors.title = \"You must enter a title.\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description.\";\n  }\n  return errors;\n};\n\n// Hook up reduxForm\n// after that we will have a bunch of props to use depending on our needs\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate: validate,\n})(StreamCreate);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;EACzCC,WAAW,OAAqB;IAAA,IAApB;MAAEC,KAAF;MAASC;IAAT,CAAoB;;IAC9B,IAAIA,OAAO,IAAID,KAAf,EAAsB;MACpB,oBACE;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,QAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF;;EAEDE,WAAW,QAAyB;IAAA,IAAxB;MAAEC,KAAF;MAASC,KAAT;MAAgBC;IAAhB,CAAwB;IAClC,oBACE;MAAK,SAAS,EAAC,OAAf;MAAA,wBACE;QAAA,UAAQD;MAAR;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,sBAAWD,KAAX;QAAkB,YAAY,EAAC;MAA/B;QAAA;QAAA;QAAA;MAAA,QAFF,EAGG,KAAKJ,WAAL,CAAiBM,IAAjB,CAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;EAEDC,QAAQ,CAACC,UAAD,EAAa,CAAE;;EAEvBC,MAAM,GAAG;IACP,oBACE;MACE,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CADZ;MAEE,SAAS,EAAC,SAFZ;MAAA,wBAIE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,SAAS,EAAE,KAAKJ,WAApC;QAAiD,KAAK,EAAC;MAAvD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,KAAD;QACE,IAAI,EAAC,aADP;QAEE,SAAS,EAAE,KAAKA,WAFlB;QAGE,KAAK,EAAC;MAHR;QAAA;QAAA;QAAA;MAAA,QALF,eAUE;QAAQ,SAAS,EAAC,mBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAcD;;AAtCwC;;AAyC3C,MAAMS,QAAQ,GAAIJ,UAAD,IAAgB;EAC/B;EACA;EACA,MAAMK,MAAM,GAAG,EAAf;;EACA,IAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;IACrBD,MAAM,CAACC,KAAP,GAAe,yBAAf;EACD;;EACD,IAAI,CAACN,UAAU,CAACO,WAAhB,EAA6B;IAC3BF,MAAM,CAACE,WAAP,GAAqB,+BAArB;EACD;;EACD,OAAOF,MAAP;AACD,CAXD,C,CAaA;AACA;;;AACA,eAAehB,SAAS,CAAC;EACvBmB,IAAI,EAAE,cADiB;EAEvBJ,QAAQ,EAAEA;AAFa,CAAD,CAAT,CAGZd,YAHY,CAAf"},"metadata":{},"sourceType":"module"}